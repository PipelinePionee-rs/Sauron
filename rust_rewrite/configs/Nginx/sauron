server {
    server_name sauron.tolana.dev;

    root /var/www/sauron;
    index search.html;

    location / {
        try_files $uri $uri.html $uri/ =404;
    }    


    location /api {
        proxy_pass http://127.0.0.1:8080/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: Increase request timeouts if needed
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /doc {
            proxy_pass http://127.0.0.1:8080/doc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    
            # Optional: Increase request timeouts if needed
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

    

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/sauron.tolana.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/sauron.tolana.dev/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = sauron.tolana.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name sauron.tolana.dev;
    return 404; # managed by Certbot


}
