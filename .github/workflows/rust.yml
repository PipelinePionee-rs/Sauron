name: Rust

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ secrets.TEST_POSTGRES_URL }} # For testing purposes

permissions:
  contents: read
  security-events: write

jobs:
  build:

    runs-on: blacksmith-2vcpu-ubuntu-2204

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Install latest stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: useblacksmith/cache@v5
      with:
        path: |
          rust_rewrite/target
          ~/.cargo/registry
          ~/.cargo/git
        key: rust-${{ runner.os }}-${{ hashFiles('rust_rewrite/Cargo.lock') }}
        restore-keys: |
          rust-${{ runner.os }}-

    - name: Run migrations
      run: |
        cd rust_rewrite
        cargo install sqlx-cli --no-default-features --features postgres --locked
        sqlx database create
        sqlx migrate run

    - name: Run Clippy
      run: |
        cd rust_rewrite
        cargo clippy --all-targets --all-features

    - name: Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: rust_rewrite/Dockerfile
        format: sarif
        output-file: hadolint-results.sarif
          
    - name: Upload Hadolint results
      uses: github/codeql-action/upload-sarif@v3
      if: success() || failure()
      with:
        sarif_file: hadolint-results.sarif
        wait-for-processing: true

    - name: Build
      run: |
           cd rust_rewrite/
           cargo build --verbose
    - name: Run tests
      run: |
           cd rust_rewrite/ 
           cargo test --verbose